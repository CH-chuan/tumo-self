// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./tumo.db"
}

// Auth.js models
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          String    @default("USER")
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  generations   Generation[]
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

// Models for storing generation results
model Generation {
  id          String      @id @default(cuid())
  userId      String
  prompt      String
  timestamp   DateTime    @default(now())
  mediaItems  MediaItem[]
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model MediaItem {
  id             String     @id @default(cuid())
  generationId   String
  provider       String
  modelId        String?
  mediaType      String     // "IMAGE", "AUDIO", "VIDEO", etc.
  mediaPath      String?
  mediaUrl       String?
  metadata       Json?      // Optional JSON field for additional metadata
  timestamp      DateTime   @default(now())
  generation     Generation @relation(fields: [generationId], references: [id], onDelete: Cascade)

  @@index([generationId])
}
